package os.utils;

import java.lang.FLASH;
import java.lang.Object;
import java.lang.String;
import java.lang.BIOS;
import java.lang.STRUCT;
import rte.DynamicRuntime;
import rte.SClassDesc;
import rte.SArray;
import rte.SIntfMap;
import rte.EmptyObject;
import rte.SMthdBlock;
import rte.SIntfDesc;
import os.pci.PCIDevice;
import os.pci.PCIController;
import os.tasks.specificTasks.TerminalTask;
import os.tasks.specificTasks.TerminalPrompter;
import os.tasks.specificTasks.Counter;
import os.tasks.specificTasks.MarkAndSweep;
import os.tasks.specificTasks.SchedulerInfoPrinter;
import os.tasks.CommandTask;
import os.tasks.DelayTask;
import os.tasks.LoopTask;
import os.tasks.Task;
import os.interrupt.Handler;
import os.interrupt.Interrupt;
import os.interrupt.BlueScreen;
import os.interrupt.StackTraverser;
import os.utils.StringBuffer;
import os.utils.stringTemplate.StringTemplate;
import os.utils.stringTemplate.Placeholder;
import os.utils.TableFormatter;
import os.utils.ObjectRelocEntrySizes;
import os.utils.Range;
import os.utils.Math;
import os.utils.OutStream;
import os.utils.NumberHelper;
import os.filesystem.FileSystem;
import os.filesystem.FileStream;
import os.filesystem.File;
import os.screen.GraphicLogo;
import os.screen.Terminal;
import os.screen.Graphic;
import os.screen.Color;
import os.screen.Cursor;
import os.commands.Help;
import os.commands.Info;
import os.commands.LS;
import os.commands.AddCounter;
import os.commands.CC;
import os.commands.MarkAndSweep;
import os.commands.PrintEmptyObject;
import os.commands.Echo;
import os.commands.MemLayout;
import os.commands.PCI;
import os.editor.Editor;
import os.keyboard.ASCII;
import os.keyboard.KeyBuffer;
import os.keyboard.KeyboardController;
import os.keyboard.layout.QWERTY;
import os.keyboard.KeyEvent;
import kernel.Scheduler;
import kernel.Sample;
import kernel.Kernel;
import devices.StaticV24;

public class ObjectRelocEntrySizes {

    public static int getSizeOf(String str) {

        if("FLASH".equals(str)) return MAGIC.getInstRelocEntries("FLASH");
        if("Object".equals(str)) return MAGIC.getInstRelocEntries("Object");
        if("String".equals(str)) return MAGIC.getInstRelocEntries("String");
        if("BIOS".equals(str)) return MAGIC.getInstRelocEntries("BIOS");
        if("STRUCT".equals(str)) return MAGIC.getInstRelocEntries("STRUCT");
        if("DynamicRuntime".equals(str)) return MAGIC.getInstRelocEntries("DynamicRuntime");
        if("SClassDesc".equals(str)) return MAGIC.getInstRelocEntries("SClassDesc");
        if("SArray".equals(str)) return MAGIC.getInstRelocEntries("SArray");
        if("SIntfMap".equals(str)) return MAGIC.getInstRelocEntries("SIntfMap");
        if("EmptyObject".equals(str)) return MAGIC.getInstRelocEntries("EmptyObject");
        if("SMthdBlock".equals(str)) return MAGIC.getInstRelocEntries("SMthdBlock");
        if("SIntfDesc".equals(str)) return MAGIC.getInstRelocEntries("SIntfDesc");
        if("PCIDevice".equals(str)) return MAGIC.getInstRelocEntries("PCIDevice");
        if("PCIController".equals(str)) return MAGIC.getInstRelocEntries("PCIController");
        if("TerminalTask".equals(str)) return MAGIC.getInstRelocEntries("TerminalTask");
        if("TerminalPrompter".equals(str)) return MAGIC.getInstRelocEntries("TerminalPrompter");
        if("Counter".equals(str)) return MAGIC.getInstRelocEntries("Counter");
        if("MarkAndSweep".equals(str)) return MAGIC.getInstRelocEntries("MarkAndSweep");
        if("SchedulerInfoPrinter".equals(str)) return MAGIC.getInstRelocEntries("SchedulerInfoPrinter");
        if("CommandTask".equals(str)) return MAGIC.getInstRelocEntries("CommandTask");
        if("DelayTask".equals(str)) return MAGIC.getInstRelocEntries("DelayTask");
        if("LoopTask".equals(str)) return MAGIC.getInstRelocEntries("LoopTask");
        if("Task".equals(str)) return MAGIC.getInstRelocEntries("Task");
        if("Handler".equals(str)) return MAGIC.getInstRelocEntries("Handler");
        if("Interrupt".equals(str)) return MAGIC.getInstRelocEntries("Interrupt");
        if("BlueScreen".equals(str)) return MAGIC.getInstRelocEntries("BlueScreen");
        if("StackTraverser".equals(str)) return MAGIC.getInstRelocEntries("StackTraverser");
        if("StringBuffer".equals(str)) return MAGIC.getInstRelocEntries("StringBuffer");
        if("StringTemplate".equals(str)) return MAGIC.getInstRelocEntries("StringTemplate");
        if("Placeholder".equals(str)) return MAGIC.getInstRelocEntries("Placeholder");
        if("TableFormatter".equals(str)) return MAGIC.getInstRelocEntries("TableFormatter");
        if("ObjectRelocEntrySizes".equals(str)) return MAGIC.getInstRelocEntries("ObjectRelocEntrySizes");
        if("Range".equals(str)) return MAGIC.getInstRelocEntries("Range");
        if("Math".equals(str)) return MAGIC.getInstRelocEntries("Math");
        if("OutStream".equals(str)) return MAGIC.getInstRelocEntries("OutStream");
        if("NumberHelper".equals(str)) return MAGIC.getInstRelocEntries("NumberHelper");
        if("FileSystem".equals(str)) return MAGIC.getInstRelocEntries("FileSystem");
        if("FileStream".equals(str)) return MAGIC.getInstRelocEntries("FileStream");
        if("File".equals(str)) return MAGIC.getInstRelocEntries("File");
        if("GraphicLogo".equals(str)) return MAGIC.getInstRelocEntries("GraphicLogo");
        if("Terminal".equals(str)) return MAGIC.getInstRelocEntries("Terminal");
        if("Graphic".equals(str)) return MAGIC.getInstRelocEntries("Graphic");
        if("Color".equals(str)) return MAGIC.getInstRelocEntries("Color");
        if("Cursor".equals(str)) return MAGIC.getInstRelocEntries("Cursor");
        if("Help".equals(str)) return MAGIC.getInstRelocEntries("Help");
        if("Info".equals(str)) return MAGIC.getInstRelocEntries("Info");
        if("LS".equals(str)) return MAGIC.getInstRelocEntries("LS");
        if("AddCounter".equals(str)) return MAGIC.getInstRelocEntries("AddCounter");
        if("CC".equals(str)) return MAGIC.getInstRelocEntries("CC");
        if("MarkAndSweep".equals(str)) return MAGIC.getInstRelocEntries("MarkAndSweep");
        if("PrintEmptyObject".equals(str)) return MAGIC.getInstRelocEntries("PrintEmptyObject");
        if("Echo".equals(str)) return MAGIC.getInstRelocEntries("Echo");
        if("MemLayout".equals(str)) return MAGIC.getInstRelocEntries("MemLayout");
        if("PCI".equals(str)) return MAGIC.getInstRelocEntries("PCI");
        if("Editor".equals(str)) return MAGIC.getInstRelocEntries("Editor");
        if("ASCII".equals(str)) return MAGIC.getInstRelocEntries("ASCII");
        if("KeyBuffer".equals(str)) return MAGIC.getInstRelocEntries("KeyBuffer");
        if("KeyboardController".equals(str)) return MAGIC.getInstRelocEntries("KeyboardController");
        if("QWERTY".equals(str)) return MAGIC.getInstRelocEntries("QWERTY");
        if("KeyEvent".equals(str)) return MAGIC.getInstRelocEntries("KeyEvent");
        if("Scheduler".equals(str)) return MAGIC.getInstRelocEntries("Scheduler");
        if("Sample".equals(str)) return MAGIC.getInstRelocEntries("Sample");
        if("Kernel".equals(str)) return MAGIC.getInstRelocEntries("Kernel");
        if("StaticV24".equals(str)) return MAGIC.getInstRelocEntries("StaticV24");

        return -1;
    }
}
